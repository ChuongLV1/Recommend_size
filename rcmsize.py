import pandas as pd
import joblib
from catboost import CatBoostClassifier

# Load model v√† encoder
model = CatBoostClassifier()
model.load_model("../Recommend_size/catboost_pipeline_model_final.cbm")
le = joblib.load("../Recommend_size/catboost_pipeline_label_encoder_final.pkl")

# H√†m d·ª± ƒëo√°n size v·ªõi gi√° tr·ªã m·∫∑c ƒë·ªãnh cho c√°c tr∆∞·ªùng ph·ª•
def predict_size(height, weight, gender, age=None, length_back=None, chest=None):
    bmi = weight / ((height / 100) ** 2)

    # G√°n gi√° tr·ªã m·∫∑c ƒë·ªãnh n·∫øu kh√¥ng c√≥
    if age is None:
        age = 25
    if length_back is None:
        length_back = 72.0
    if chest is None:
        chest = 100.0

    input_df = pd.DataFrame([[height, weight, age, gender.lower(), bmi, length_back, chest]],
                             columns=['height', 'weight', 'age', 'gender', 'BMI', 'length_back', 'chest'])

    pred_encoded = model.predict(input_df)[0]
    predicted_size = le.inverse_transform([int(pred_encoded)])[0]
    return predicted_size

# Ch·∫°y local b·∫±ng giao di·ªán d√≤ng l·ªánh
if __name__ == "__main__":
    try:
        height = float(input("Nh·∫≠p chi·ªÅu cao (cm): "))
        weight = float(input("Nh·∫≠p c√¢n n·∫∑ng (kg): "))
        gender = input("Nh·∫≠p gi·ªõi t√≠nh (Nam/N·ªØ): ").strip().lower()

        if gender not in ['nam', 'n·ªØ', 'male', 'female']:
            print("‚ö†Ô∏è Gi·ªõi t√≠nh kh√¥ng h·ª£p l·ªá. Ch·ªâ ch·∫•p nh·∫≠n: Nam/N·ªØ ho·∫∑c male/female.")
        else:
            # C√°c input t√πy ch·ªçn
            age_input = input("Nh·∫≠p tu·ªïi (t√πy ch·ªçn, Enter n·∫øu b·ªè qua): ").strip()
            length_back_input = input("Nh·∫≠p chi·ªÅu d√†i l∆∞ng (cm, t√πy ch·ªçn, Enter n·∫øu b·ªè qua): ").strip()
            chest_input = input("Nh·∫≠p v√≤ng ng·ª±c (cm, t√πy ch·ªçn, Enter n·∫øu b·ªè qua): ").strip()

            # Chuy·ªÉn ƒë·ªïi n·∫øu c√≥
            age = int(age_input) if age_input else None
            length_back = float(length_back_input) if length_back_input else None
            chest = float(chest_input) if chest_input else None

            # D·ª± ƒëo√°n
            result = predict_size(height, weight, gender, age, length_back, chest)
            print(f"\nüéØ Recommended size: {result}")
    except Exception as e:
        print("‚ùå L·ªói khi nh·∫≠p ho·∫∑c x·ª≠ l√Ω d·ªØ li·ªáu:", e)
